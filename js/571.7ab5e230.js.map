{"version":3,"file":"js/571.7ab5e230.js","mappings":"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","sources":["webpack://biblical-catalyst/./src/views/canvases/CanvasPage.vue","webpack://biblical-catalyst/../../../src/components/VTooltip/VTooltip.ts","webpack://biblical-catalyst/./src/components/canvases/CanvasOne.vue","webpack://biblical-catalyst/./node_modules/marked/lib/marked.esm.js","webpack://biblical-catalyst/src/components/canvases/CanvasOne.vue","webpack://biblical-catalyst/./src/components/canvases/CanvasOne.vue?3953","webpack://biblical-catalyst/./src/components/canvases/CanvasOne.vue?70a4","webpack://biblical-catalyst/src/views/canvases/CanvasPage.vue","webpack://biblical-catalyst/./src/views/canvases/CanvasPage.vue?237a","webpack://biblical-catalyst/./src/views/canvases/CanvasPage.vue?6e09","webpack://biblical-catalyst/../../../src/components/VResponsive/VResponsive.ts"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('canvas-one',{attrs:{\"items\":_vm.items,\"category\":_vm.category}})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import './VTooltip.sass'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Colorable from '../../mixins/colorable'\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Menuable from '../../mixins/menuable'\n\n// Helpers\nimport { convertToUnit, keyCodes, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Colorable, Delayable, Dependent, Menuable).extend({\n  name: 'v-tooltip',\n\n  props: {\n    closeDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    disabled: Boolean,\n    openDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    openOnHover: {\n      type: Boolean,\n      default: true,\n    },\n    openOnFocus: {\n      type: Boolean,\n      default: true,\n    },\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    transition: String,\n  },\n\n  data: () => ({\n    calculatedMinWidth: 0,\n    closeDependents: false,\n  }),\n\n  computed: {\n    calculatedLeft (): string {\n      const { activator, content } = this.dimensions\n      const unknown = !this.bottom && !this.left && !this.top && !this.right\n      const activatorLeft = this.attach !== false ? activator.offsetLeft : activator.left\n      let left = 0\n\n      if (this.top || this.bottom || unknown) {\n        left = (\n          activatorLeft +\n          (activator.width / 2) -\n          (content.width / 2)\n        )\n      } else if (this.left || this.right) {\n        left = (\n          activatorLeft +\n          (this.right ? activator.width : -content.width) +\n          (this.right ? 10 : -10)\n        )\n      }\n\n      if (this.nudgeLeft) left -= parseInt(this.nudgeLeft)\n      if (this.nudgeRight) left += parseInt(this.nudgeRight)\n\n      return `${this.calcXOverflow(left, this.dimensions.content.width)}px`\n    },\n    calculatedTop (): string {\n      const { activator, content } = this.dimensions\n      const activatorTop = this.attach !== false ? activator.offsetTop : activator.top\n      let top = 0\n\n      if (this.top || this.bottom) {\n        top = (\n          activatorTop +\n          (this.bottom ? activator.height : -content.height) +\n          (this.bottom ? 10 : -10)\n        )\n      } else if (this.left || this.right) {\n        top = (\n          activatorTop +\n          (activator.height / 2) -\n          (content.height / 2)\n        )\n      }\n\n      if (this.nudgeTop) top -= parseInt(this.nudgeTop)\n      if (this.nudgeBottom) top += parseInt(this.nudgeBottom)\n      if (this.attach === false) top += this.pageYOffset\n\n      return `${this.calcYOverflow(top)}px`\n    },\n    classes (): object {\n      return {\n        'v-tooltip--top': this.top,\n        'v-tooltip--right': this.right,\n        'v-tooltip--bottom': this.bottom,\n        'v-tooltip--left': this.left,\n        'v-tooltip--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      }\n    },\n    computedTransition (): string {\n      if (this.transition) return this.transition\n\n      return this.isActive ? 'scale-transition' : 'fade-transition'\n    },\n    offsetY (): boolean {\n      return this.top || this.bottom\n    },\n    offsetX (): boolean {\n      return this.left || this.right\n    },\n    styles (): object {\n      return {\n        left: this.calculatedLeft,\n        maxWidth: convertToUnit(this.maxWidth),\n        minWidth: convertToUnit(this.minWidth),\n        top: this.calculatedTop,\n        zIndex: this.zIndex || this.activeZIndex,\n      }\n    },\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      this.value && this.callActivate()\n    })\n  },\n\n  mounted () {\n    if (getSlotType(this, 'activator', true) === 'v-slot') {\n      consoleError(`v-tooltip's activator slot must be bound, try '<template #activator=\"data\"><v-btn v-on=\"data.on>'`, this)\n    }\n  },\n\n  methods: {\n    activate () {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(this.startTransition)\n    },\n    deactivate () {\n      this.runDelay('close')\n    },\n    genActivatorListeners () {\n      const listeners = Activatable.options.methods.genActivatorListeners.call(this)\n\n      if (this.openOnFocus) {\n        listeners.focus = (e: Event) => {\n          this.getActivator(e)\n          this.runDelay('open')\n        }\n        listeners.blur = (e: Event) => {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      }\n\n      listeners.keydown = (e: KeyboardEvent) => {\n        if (e.keyCode === keyCodes.esc) {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      }\n\n      return listeners\n    },\n    genActivatorAttributes () {\n      return {\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genTransition () {\n      const content = this.genContent()\n\n      if (!this.computedTransition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.computedTransition,\n        },\n      }, [content])\n    },\n    genContent () {\n      return this.$createElement(\n        'div',\n        this.setBackgroundColor(this.color, {\n          staticClass: 'v-tooltip__content',\n          class: {\n            [this.contentClass]: true,\n            menuable__content__active: this.isActive,\n            'v-tooltip__content--fixed': this.activatorFixed,\n          },\n          style: this.styles,\n          attrs: this.getScopeIdAttrs(),\n          directives: [{\n            name: 'show',\n            value: this.isContentActive,\n          }],\n          ref: 'content',\n        }),\n        this.getContentSlot()\n      )\n    },\n  },\n\n  render (h): VNode {\n    return h(this.tag, {\n      staticClass: 'v-tooltip',\n      class: this.classes,\n    }, [\n      this.showLazyContent(() => [this.genTransition()]),\n      this.genActivator(),\n    ])\n  },\n})\n","var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.items)?_c('v-row',{attrs:{\"dense\":\"\"}},[(_vm.$vuetify.breakpoint.smAndUp && !_vm.fullscreen)?_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":_vm.fullscreen ? 1 : 3}},[_c('v-card',{staticClass:\"fixed-nav px-2\",attrs:{\"height\":\"100%\",\"flat\":\"\"}},[(!_vm.fullscreen)?_c('v-card-title',{staticClass:\"capitalize navy\",attrs:{\"primary-title\":\"\"}},[_vm._v(\" \"+_vm._s(_vm.category)+\" \")]):_vm._e(),(!_vm.fullscreen)?_c('v-card-text',{staticClass:\"scroll\"},[_c('v-list',{attrs:{\"flat\":\"\"}},[_c('v-list-item-group',{staticClass:\"maroon\",attrs:{\"value\":_vm.activeListItem,\"mandatory\":\"\"}},_vm._l((_vm.items),function(item,i){return _c('v-list-item',{key:i,staticClass:\"list-itemss\"},[_c('v-list-item-content',[_c('v-tooltip',{attrs:{\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('v-list-item-title',_vm._g(_vm._b({on:{\"click\":function($event){_vm.selectedItem = item;\n                        _vm.onSelectItem();}}},'v-list-item-title',attrs,false),on),[_c('small',[_vm._v(_vm._s(item.title))])])]}}],null,true)},[_c('span',[_vm._v(_vm._s(item.title))])])],1)],1)}),1)],1)],1):_c('v-card-text',{staticClass:\"scroll capitalize\"},[_c('v-btn',{attrs:{\"icon\":\"\"},on:{\"click\":function($event){_vm.fullscreen = false}}},[_c('v-icon',[_vm._v(\"mdi-arrow-right\")])],1)],1)],1)],1):_vm._e(),_c('v-col',{attrs:{\"cols\":\"11\",\"sm\":_vm.fullscreen ? 11 : 6}},[_c('v-card',{attrs:{\"width\":\"100%\",\"flat\":\"\"}},[_c('div',{staticClass:\"capitalize px-4\",class:{\n          'fixed-title-full': _vm.fullscreen,\n          'fixed-title': !_vm.fullscreen,\n        }},[_c('div',[_c('v-btn',{attrs:{\"text\":\"\",\"color\":\"#b78727\",\"small\":\"\"},on:{\"click\":function($event){return _vm.$router.push({ name: 'homePage' })}}},[_vm._v(\"Home\")]),_vm._v(\" / \"),_c('v-btn',{attrs:{\"small\":\"\",\"text\":\"\",\"color\":\"grey\",\"disabled\":\"\"}},[_vm._v(_vm._s(_vm.category))])],1),_c('v-row',{staticClass:\"pb-2\",attrs:{\"dense\":\"\",\"align\":\"center\"}},[_c('v-col',{attrs:{\"sm\":\"10\",\"cols\":\"12\"}},[_c('v-select',{staticClass:\"sm-font bold\",attrs:{\"items\":_vm.items,\"item-text\":\"title\",\"label\":\"select\",\"return-object\":\"\",\"dense\":\"\",\"solo\":\"\",\"flat\":\"\",\"fill\":\"\",\"full-width\":\"\",\"hide-details\":\"\",\"color\":\"white\"},on:{\"input\":_vm.onSelectItem},model:{value:(_vm.selectedItem),callback:function ($$v) {_vm.selectedItem=$$v},expression:\"selectedItem\"}})],1),(_vm.$vuetify.breakpoint.smAndUp)?_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"2\"}},[_c('v-tooltip',{attrs:{\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('v-btn',_vm._g(_vm._b({staticClass:\"mr-2\",attrs:{\"icon\":\"\",\"x-small\":\"\",\"color\":\"#b78727\"},on:{\"click\":function($event){_vm.fullscreen = !_vm.fullscreen}}},'v-btn',attrs,false),on),[_c('v-icon',[_vm._v(\" \"+_vm._s(_vm.fullscreen ? \"mdi-fullscreen-exit\" : \"mdi-fullscreen\")+\" \")])],1)]}}],null,false,4119687565)},[_c('span',[_vm._v(_vm._s(_vm.fullscreen ? \"Exit fullscreen\" : \"Read in fullscreen mode\"))])]),_c('v-tooltip',{attrs:{\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('v-btn',_vm._g(_vm._b({staticClass:\"pr-2\",attrs:{\"color\":\"#b78727\",\"x-small\":\"\",\"icon\":\"\"}},'v-btn',attrs,false),on),[_c('v-icon',[_vm._v(\"mdi-share-variant\")])],1)]}}],null,false,228941860)},[_c('span',[_vm._v(\"Share\")])])],1):_vm._e()],1),_c('v-divider')],1),_c('v-card-text',{staticClass:\"card-text\"},[(Object.keys(_vm.selectedItem.properties).length > 0)?_c('section',[_vm._l((Object.keys(_vm.selectedItem.properties)),function(key,z){return _c('div',{key:z},[_c('label',{staticClass:\"navy capitalize\"},[_vm._v(_vm._s(key)+\":\")]),_vm._v(\" \"+_vm._s(_vm.selectedItem.properties[key])+\" \")])}),_c('v-divider',{staticClass:\"my-2\"})],2):_vm._e(),(_vm.selectedItem.isMarkDown)?_c('section',[_c('div',{staticClass:\"markdown\",domProps:{\"innerHTML\":_vm._s(_vm.parseMarkDown(_vm.selectedItem.markDown))}})]):_c('section',[_c('h3',{staticClass:\"maroon\"}),_c('div',[_vm._v(_vm._s(_vm.selectedItem.interpretation))])]),(_vm.selectedItem.bibleVerses)?_c('section',{staticClass:\"mt-4\"},[_c('h3',{staticClass:\"maroon mb-4\"},[_vm._v(\" \"+_vm._s(_vm.$store.state.locale == \"ar\" ? \"آيات ذات صلة من الكتاب المقدس\" : \"Related Verses from The Bible\")+\" \")]),_vm._l((_vm.selectedItem.bibleVerses),function(verse,v){return _c('v-card',{key:v,staticClass:\"elevation-6 mb-4 verse-card\"},[_c('v-card-text',[_vm._v(\" “\"+_vm._s(verse)+\"” \")])],1)})],2):_vm._e(),(_vm.selectedItem.references.length)?_c('section',[_c('h3',{staticClass:\"maroon mb-4\"},[_vm._v(\" \"+_vm._s(_vm.$store.state.locale == \"ar\" ? \"مصادر\" : \"References\")+\" \")]),_vm._l((_vm.selectedItem.references),function(reference,w){return _c('v-responsive',{key:w,attrs:{\"aspect-ratio\":\"16/9\"}},[_c('iframe',{staticClass:\"main-img\",attrs:{\"width\":\"300\",\"height\":\"200\",\"src\":`https://www.youtube.com/embed/${reference}`,\"frameborder\":\"0\",\"allowfullscreen\":\"\"}})])})],2):_vm._e()])],1)],1),(!_vm.fullscreen)?_c('v-col',{staticClass:\"resources\",attrs:{\"cols\":\"12\"}},[_c('div',{staticClass:\"mt-4\"},[_c('h4',{staticClass:\"navy\"},[_vm._v(\" \"+_vm._s(_vm.$store.state.locale == \"ar\" ? \"مصادر\" : \"Resources\")+\" \"),_c('span',{staticClass:\"mx-4\"},[_c('v-btn',{attrs:{\"x-small\":\"\",\"icon\":\"\"},on:{\"click\":function($event){_vm.hideMedia = !_vm.hideMedia}}},[_c('v-icon',[_vm._v(_vm._s(_vm.hideMedia ? \"mdi-eye\" : \"mdi-eye-off\"))])],1)],1)]),(!_vm.hideMedia)?_c('div',[_c('h5',[_vm._v(\"Father Dawood Lamie\")]),_c('v-responsive',{staticClass:\"mb-4\",attrs:{\"aspect-ratio\":\"16/9\"}},[_c('iframe',{attrs:{\"width\":\"300\",\"height\":\"200\",\"src\":\"https://www.youtube.com/embed/C3qL54EnW20\",\"frameborder\":\"2\",\"allowfullscreen\":\"\"}})]),_c('h5',[_vm._v(\"How to read the bible\")]),_c('v-responsive',{attrs:{\"aspect-ratio\":\"16/9\"}},[_c('iframe',{attrs:{\"width\":\"300\",\"height\":\"200\",\"src\":\"https://www.youtube.com/embed/7bIUIFMZY6c\",\"frameborder\":\"2\",\"allowfullscreen\":\"\"},on:{\"click\":function($event){return _vm.console.log('he')}}})]),_c('h5',[_vm._v(\"How to read the bible\")]),_c('v-responsive',{attrs:{\"aspect-ratio\":\"16/9\"}},[_c('iframe',{attrs:{\"width\":\"300\",\"height\":\"200\",\"src\":\"https://www.youtube.com/embed/7bIUIFMZY6c\",\"frameborder\":\"2\",\"allowfullscreen\":\"\"}})]),_c('h5',[_vm._v(\"How to read the bible\")]),_c('v-responsive',{attrs:{\"aspect-ratio\":\"16/9\"}},[_c('iframe',{attrs:{\"width\":\"300\",\"height\":\"200\",\"src\":\"https://www.youtube.com/embed/7bIUIFMZY6c\",\"frameborder\":\"2\",\"allowfullscreen\":\"\"}})]),_c('h5',[_vm._v(\"How to read the bible\")]),_c('v-responsive',{attrs:{\"aspect-ratio\":\"16/9\"}},[_c('iframe',{attrs:{\"width\":\"300\",\"height\":\"200\",\"src\":\"https://www.youtube.com/embed/7bIUIFMZY6c\",\"frameborder\":\"2\",\"allowfullscreen\":\"\"}})]),_c('h5',[_vm._v(\"How to read the bible\")]),_c('v-responsive',{attrs:{\"aspect-ratio\":\"16/9\"}},[_c('iframe',{attrs:{\"width\":\"300\",\"height\":\"200\",\"src\":\"https://www.youtube.com/embed/7bIUIFMZY6c\",\"frameborder\":\"2\",\"allowfullscreen\":\"\"}})]),_c('h5',[_vm._v(\"How to read the bible\")]),_c('v-responsive',{attrs:{\"aspect-ratio\":\"16/9\"}},[_c('iframe',{attrs:{\"width\":\"300\",\"height\":\"200\",\"src\":\"https://www.youtube.com/embed/7bIUIFMZY6c\",\"frameborder\":\"2\",\"allowfullscreen\":\"\"}})]),_c('h5',[_vm._v(\"How to read the bible\")]),_c('v-responsive',{attrs:{\"aspect-ratio\":\"16/9\"}},[_c('iframe',{attrs:{\"width\":\"300\",\"height\":\"200\",\"src\":\"https://www.youtube.com/embed/7bIUIFMZY6c\",\"frameborder\":\"2\",\"allowfullscreen\":\"\"}})]),_c('h5',[_vm._v(\"How to read the bible\")]),_c('v-responsive',{attrs:{\"aspect-ratio\":\"16/9\"}},[_c('iframe',{attrs:{\"width\":\"300\",\"height\":\"200\",\"src\":\"https://www.youtube.com/embed/7bIUIFMZY6c\",\"frameborder\":\"2\",\"allowfullscreen\":\"\"}})]),_c('h5',[_vm._v(\"How to read the bible\")]),_c('v-responsive',{attrs:{\"aspect-ratio\":\"16/9\"}},[_c('iframe',{attrs:{\"width\":\"300\",\"height\":\"200\",\"src\":\"https://www.youtube.com/embed/7bIUIFMZY6c\",\"frameborder\":\"2\",\"allowfullscreen\":\"\"}})]),_c('h5',[_vm._v(\"How to read the bible\")]),_c('v-responsive',{attrs:{\"aspect-ratio\":\"16/9\"}},[_c('iframe',{attrs:{\"width\":\"300\",\"height\":\"200\",\"src\":\"https://www.youtube.com/embed/7bIUIFMZY6c\",\"frameborder\":\"2\",\"allowfullscreen\":\"\"}})]),_c('h5',[_vm._v(\"How to read the bible\")]),_c('v-responsive',{attrs:{\"aspect-ratio\":\"16/9\"}},[_c('iframe',{attrs:{\"width\":\"300\",\"height\":\"200\",\"src\":\"https://www.youtube.com/embed/7bIUIFMZY6c\",\"frameborder\":\"2\",\"allowfullscreen\":\"\"}})]),_c('h5',[_vm._v(\"How to read the bible\")]),_c('v-responsive',{attrs:{\"aspect-ratio\":\"16/9\"}},[_c('iframe',{attrs:{\"width\":\"300\",\"height\":\"200\",\"src\":\"https://www.youtube.com/embed/7bIUIFMZY6c\",\"frameborder\":\"2\",\"allowfullscreen\":\"\"}})]),_c('h5',[_vm._v(\"How to read the bible\")]),_c('v-responsive',{attrs:{\"aspect-ratio\":\"16/9\"}},[_c('iframe',{attrs:{\"width\":\"300\",\"height\":\"200\",\"src\":\"https://www.youtube.com/embed/7bIUIFMZY6c\",\"frameborder\":\"2\",\"allowfullscreen\":\"\"}})]),_c('h5',[_vm._v(\"How to read the bible\")]),_c('v-responsive',{attrs:{\"aspect-ratio\":\"16/9\"}},[_c('iframe',{attrs:{\"width\":\"300\",\"height\":\"200\",\"src\":\"https://www.youtube.com/embed/7bIUIFMZY6c\",\"frameborder\":\"2\",\"allowfullscreen\":\"\"}})]),_c('h5',[_vm._v(\"How to read the bible\")]),_c('v-responsive',{attrs:{\"aspect-ratio\":\"16/9\"}},[_c('iframe',{attrs:{\"width\":\"300\",\"height\":\"200\",\"src\":\"https://www.youtube.com/embed/7bIUIFMZY6c\",\"frameborder\":\"2\",\"allowfullscreen\":\"\"}})])],1):_vm._e()])]):_vm._e()],1):_vm._e()\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * marked v11.0.0 - a markdown parser\n * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n/**\n * Gets the original marked default options.\n */\nfunction _getDefaults() {\n    return {\n        async: false,\n        breaks: false,\n        extensions: null,\n        gfm: true,\n        hooks: null,\n        pedantic: false,\n        renderer: null,\n        silent: false,\n        tokenizer: null,\n        walkTokens: null\n    };\n}\nlet _defaults = _getDefaults();\nfunction changeDefaults(newDefaults) {\n    _defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape$1(html, encode) {\n    if (encode) {\n        if (escapeTest.test(html)) {\n            return html.replace(escapeReplace, getEscapeReplacement);\n        }\n    }\n    else {\n        if (escapeTestNoEncode.test(html)) {\n            return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n        }\n    }\n    return html;\n}\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\nfunction unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, (_, n) => {\n        n = n.toLowerCase();\n        if (n === 'colon')\n            return ':';\n        if (n.charAt(0) === '#') {\n            return n.charAt(1) === 'x'\n                ? String.fromCharCode(parseInt(n.substring(2), 16))\n                : String.fromCharCode(+n.substring(1));\n        }\n        return '';\n    });\n}\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n    let source = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    const obj = {\n        replace: (name, val) => {\n            let valSource = typeof val === 'string' ? val : val.source;\n            valSource = valSource.replace(caret, '$1');\n            source = source.replace(name, valSource);\n            return obj;\n        },\n        getRegex: () => {\n            return new RegExp(source, opt);\n        }\n    };\n    return obj;\n}\nfunction cleanUrl(href) {\n    try {\n        href = encodeURI(href).replace(/%25/g, '%');\n    }\n    catch (e) {\n        return null;\n    }\n    return href;\n}\nconst noopTest = { exec: () => null };\nfunction splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n        let escaped = false;\n        let curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\')\n            escaped = !escaped;\n        if (escaped) {\n            // odd number of slashes means | is escaped\n            // so we leave it alone\n            return '|';\n        }\n        else {\n            // add space before unescaped |\n            return ' |';\n        }\n    }), cells = row.split(/ \\|/);\n    let i = 0;\n    // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n    if (!cells[0].trim()) {\n        cells.shift();\n    }\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n        cells.pop();\n    }\n    if (count) {\n        if (cells.length > count) {\n            cells.splice(count);\n        }\n        else {\n            while (cells.length < count)\n                cells.push('');\n        }\n    }\n    for (; i < cells.length; i++) {\n        // leading or trailing whitespace is ignored per the gfm spec\n        cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n    return cells;\n}\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n    const l = str.length;\n    if (l === 0) {\n        return '';\n    }\n    // Length of suffix matching the invert condition.\n    let suffLen = 0;\n    // Step left until we fail to match the invert condition.\n    while (suffLen < l) {\n        const currChar = str.charAt(l - suffLen - 1);\n        if (currChar === c && !invert) {\n            suffLen++;\n        }\n        else if (currChar !== c && invert) {\n            suffLen++;\n        }\n        else {\n            break;\n        }\n    }\n    return str.slice(0, l - suffLen);\n}\nfunction findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n        return -1;\n    }\n    let level = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] === '\\\\') {\n            i++;\n        }\n        else if (str[i] === b[0]) {\n            level++;\n        }\n        else if (str[i] === b[1]) {\n            level--;\n            if (level < 0) {\n                return i;\n            }\n        }\n    }\n    return -1;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n    const href = link.href;\n    const title = link.title ? escape$1(link.title) : null;\n    const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n    if (cap[0].charAt(0) !== '!') {\n        lexer.state.inLink = true;\n        const token = {\n            type: 'link',\n            raw,\n            href,\n            title,\n            text,\n            tokens: lexer.inlineTokens(text)\n        };\n        lexer.state.inLink = false;\n        return token;\n    }\n    return {\n        type: 'image',\n        raw,\n        href,\n        title,\n        text: escape$1(text)\n    };\n}\nfunction indentCodeCompensation(raw, text) {\n    const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n    if (matchIndentToCode === null) {\n        return text;\n    }\n    const indentToCode = matchIndentToCode[1];\n    return text\n        .split('\\n')\n        .map(node => {\n        const matchIndentInNode = node.match(/^\\s+/);\n        if (matchIndentInNode === null) {\n            return node;\n        }\n        const [indentInNode] = matchIndentInNode;\n        if (indentInNode.length >= indentToCode.length) {\n            return node.slice(indentToCode.length);\n        }\n        return node;\n    })\n        .join('\\n');\n}\n/**\n * Tokenizer\n */\nclass _Tokenizer {\n    options;\n    rules; // set by the lexer\n    lexer; // set by the lexer\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(src) {\n        const cap = this.rules.block.newline.exec(src);\n        if (cap && cap[0].length > 0) {\n            return {\n                type: 'space',\n                raw: cap[0]\n            };\n        }\n    }\n    code(src) {\n        const cap = this.rules.block.code.exec(src);\n        if (cap) {\n            const text = cap[0].replace(/^ {1,4}/gm, '');\n            return {\n                type: 'code',\n                raw: cap[0],\n                codeBlockStyle: 'indented',\n                text: !this.options.pedantic\n                    ? rtrim(text, '\\n')\n                    : text\n            };\n        }\n    }\n    fences(src) {\n        const cap = this.rules.block.fences.exec(src);\n        if (cap) {\n            const raw = cap[0];\n            const text = indentCodeCompensation(raw, cap[3] || '');\n            return {\n                type: 'code',\n                raw,\n                lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, '$1') : cap[2],\n                text\n            };\n        }\n    }\n    heading(src) {\n        const cap = this.rules.block.heading.exec(src);\n        if (cap) {\n            let text = cap[2].trim();\n            // remove trailing #s\n            if (/#$/.test(text)) {\n                const trimmed = rtrim(text, '#');\n                if (this.options.pedantic) {\n                    text = trimmed.trim();\n                }\n                else if (!trimmed || / $/.test(trimmed)) {\n                    // CommonMark requires space before trailing #s\n                    text = trimmed.trim();\n                }\n            }\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[1].length,\n                text,\n                tokens: this.lexer.inline(text)\n            };\n        }\n    }\n    hr(src) {\n        const cap = this.rules.block.hr.exec(src);\n        if (cap) {\n            return {\n                type: 'hr',\n                raw: cap[0]\n            };\n        }\n    }\n    blockquote(src) {\n        const cap = this.rules.block.blockquote.exec(src);\n        if (cap) {\n            const text = rtrim(cap[0].replace(/^ *>[ \\t]?/gm, ''), '\\n');\n            const top = this.lexer.state.top;\n            this.lexer.state.top = true;\n            const tokens = this.lexer.blockTokens(text);\n            this.lexer.state.top = top;\n            return {\n                type: 'blockquote',\n                raw: cap[0],\n                tokens,\n                text\n            };\n        }\n    }\n    list(src) {\n        let cap = this.rules.block.list.exec(src);\n        if (cap) {\n            let bull = cap[1].trim();\n            const isordered = bull.length > 1;\n            const list = {\n                type: 'list',\n                raw: '',\n                ordered: isordered,\n                start: isordered ? +bull.slice(0, -1) : '',\n                loose: false,\n                items: []\n            };\n            bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n            if (this.options.pedantic) {\n                bull = isordered ? bull : '[*+-]';\n            }\n            // Get next list item\n            const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n            let raw = '';\n            let itemContents = '';\n            let endsWithBlankLine = false;\n            // Check if current bullet point can start a new List Item\n            while (src) {\n                let endEarly = false;\n                if (!(cap = itemRegex.exec(src))) {\n                    break;\n                }\n                if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n                    break;\n                }\n                raw = cap[0];\n                src = src.substring(raw.length);\n                let line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n                let nextLine = src.split('\\n', 1)[0];\n                let indent = 0;\n                if (this.options.pedantic) {\n                    indent = 2;\n                    itemContents = line.trimStart();\n                }\n                else {\n                    indent = cap[2].search(/[^ ]/); // Find first non-space char\n                    indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n                    itemContents = line.slice(indent);\n                    indent += cap[1].length;\n                }\n                let blankLine = false;\n                if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n                    raw += nextLine + '\\n';\n                    src = src.substring(nextLine.length + 1);\n                    endEarly = true;\n                }\n                if (!endEarly) {\n                    const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n                    const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n                    const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n                    const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n                    // Check if following lines should be included in List Item\n                    while (src) {\n                        const rawLine = src.split('\\n', 1)[0];\n                        nextLine = rawLine;\n                        // Re-align to follow commonmark nesting rules\n                        if (this.options.pedantic) {\n                            nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n                        }\n                        // End list item if found code fences\n                        if (fencesBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new heading\n                        if (headingBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new bullet\n                        if (nextBulletRegex.test(nextLine)) {\n                            break;\n                        }\n                        // Horizontal rule found\n                        if (hrRegex.test(src)) {\n                            break;\n                        }\n                        if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n                            itemContents += '\\n' + nextLine.slice(indent);\n                        }\n                        else {\n                            // not enough indentation\n                            if (blankLine) {\n                                break;\n                            }\n                            // paragraph continuation unless last line was a different block level element\n                            if (line.search(/[^ ]/) >= 4) { // indented code block\n                                break;\n                            }\n                            if (fencesBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (headingBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (hrRegex.test(line)) {\n                                break;\n                            }\n                            itemContents += '\\n' + nextLine;\n                        }\n                        if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n                            blankLine = true;\n                        }\n                        raw += rawLine + '\\n';\n                        src = src.substring(rawLine.length + 1);\n                        line = nextLine.slice(indent);\n                    }\n                }\n                if (!list.loose) {\n                    // If the previous item ended with a blank line, the list is loose\n                    if (endsWithBlankLine) {\n                        list.loose = true;\n                    }\n                    else if (/\\n *\\n *$/.test(raw)) {\n                        endsWithBlankLine = true;\n                    }\n                }\n                let istask = null;\n                let ischecked;\n                // Check for task list items\n                if (this.options.gfm) {\n                    istask = /^\\[[ xX]\\] /.exec(itemContents);\n                    if (istask) {\n                        ischecked = istask[0] !== '[ ] ';\n                        itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n                    }\n                }\n                list.items.push({\n                    type: 'list_item',\n                    raw,\n                    task: !!istask,\n                    checked: ischecked,\n                    loose: false,\n                    text: itemContents,\n                    tokens: []\n                });\n                list.raw += raw;\n            }\n            // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n            list.items[list.items.length - 1].raw = raw.trimEnd();\n            (list.items[list.items.length - 1]).text = itemContents.trimEnd();\n            list.raw = list.raw.trimEnd();\n            // Item child tokens handled here at end because we needed to have the final item to trim it first\n            for (let i = 0; i < list.items.length; i++) {\n                this.lexer.state.top = false;\n                list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n                if (!list.loose) {\n                    // Check if list should be loose\n                    const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n                    const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n                    list.loose = hasMultipleLineBreaks;\n                }\n            }\n            // Set all items to loose if list is loose\n            if (list.loose) {\n                for (let i = 0; i < list.items.length; i++) {\n                    list.items[i].loose = true;\n                }\n            }\n            return list;\n        }\n    }\n    html(src) {\n        const cap = this.rules.block.html.exec(src);\n        if (cap) {\n            const token = {\n                type: 'html',\n                block: true,\n                raw: cap[0],\n                pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n                text: cap[0]\n            };\n            return token;\n        }\n    }\n    def(src) {\n        const cap = this.rules.block.def.exec(src);\n        if (cap) {\n            const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n            const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline.anyPunctuation, '$1') : '';\n            const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, '$1') : cap[3];\n            return {\n                type: 'def',\n                tag,\n                raw: cap[0],\n                href,\n                title\n            };\n        }\n    }\n    table(src) {\n        const cap = this.rules.block.table.exec(src);\n        if (!cap) {\n            return;\n        }\n        if (!/[:|]/.test(cap[2])) {\n            // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n            return;\n        }\n        const headers = splitCells(cap[1]);\n        const aligns = cap[2].replace(/^\\||\\| *$/g, '').split('|');\n        const rows = cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : [];\n        const item = {\n            type: 'table',\n            raw: cap[0],\n            header: [],\n            align: [],\n            rows: []\n        };\n        if (headers.length !== aligns.length) {\n            // header and align columns must be equal, rows can be different.\n            return;\n        }\n        for (const align of aligns) {\n            if (/^ *-+: *$/.test(align)) {\n                item.align.push('right');\n            }\n            else if (/^ *:-+: *$/.test(align)) {\n                item.align.push('center');\n            }\n            else if (/^ *:-+ *$/.test(align)) {\n                item.align.push('left');\n            }\n            else {\n                item.align.push(null);\n            }\n        }\n        for (const header of headers) {\n            item.header.push({\n                text: header,\n                tokens: this.lexer.inline(header)\n            });\n        }\n        for (const row of rows) {\n            item.rows.push(splitCells(row, item.header.length).map(cell => {\n                return {\n                    text: cell,\n                    tokens: this.lexer.inline(cell)\n                };\n            }));\n        }\n        return item;\n    }\n    lheading(src) {\n        const cap = this.rules.block.lheading.exec(src);\n        if (cap) {\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[2].charAt(0) === '=' ? 1 : 2,\n                text: cap[1],\n                tokens: this.lexer.inline(cap[1])\n            };\n        }\n    }\n    paragraph(src) {\n        const cap = this.rules.block.paragraph.exec(src);\n        if (cap) {\n            const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n                ? cap[1].slice(0, -1)\n                : cap[1];\n            return {\n                type: 'paragraph',\n                raw: cap[0],\n                text,\n                tokens: this.lexer.inline(text)\n            };\n        }\n    }\n    text(src) {\n        const cap = this.rules.block.text.exec(src);\n        if (cap) {\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                tokens: this.lexer.inline(cap[0])\n            };\n        }\n    }\n    escape(src) {\n        const cap = this.rules.inline.escape.exec(src);\n        if (cap) {\n            return {\n                type: 'escape',\n                raw: cap[0],\n                text: escape$1(cap[1])\n            };\n        }\n    }\n    tag(src) {\n        const cap = this.rules.inline.tag.exec(src);\n        if (cap) {\n            if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n                this.lexer.state.inLink = true;\n            }\n            else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n                this.lexer.state.inLink = false;\n            }\n            if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = true;\n            }\n            else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = false;\n            }\n            return {\n                type: 'html',\n                raw: cap[0],\n                inLink: this.lexer.state.inLink,\n                inRawBlock: this.lexer.state.inRawBlock,\n                block: false,\n                text: cap[0]\n            };\n        }\n    }\n    link(src) {\n        const cap = this.rules.inline.link.exec(src);\n        if (cap) {\n            const trimmedUrl = cap[2].trim();\n            if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n                // commonmark requires matching angle brackets\n                if (!(/>$/.test(trimmedUrl))) {\n                    return;\n                }\n                // ending angle bracket cannot be escaped\n                const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n                if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n                    return;\n                }\n            }\n            else {\n                // find closing parenthesis\n                const lastParenIndex = findClosingBracket(cap[2], '()');\n                if (lastParenIndex > -1) {\n                    const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n                    const linkLen = start + cap[1].length + lastParenIndex;\n                    cap[2] = cap[2].substring(0, lastParenIndex);\n                    cap[0] = cap[0].substring(0, linkLen).trim();\n                    cap[3] = '';\n                }\n            }\n            let href = cap[2];\n            let title = '';\n            if (this.options.pedantic) {\n                // split pedantic href and title\n                const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n                if (link) {\n                    href = link[1];\n                    title = link[3];\n                }\n            }\n            else {\n                title = cap[3] ? cap[3].slice(1, -1) : '';\n            }\n            href = href.trim();\n            if (/^</.test(href)) {\n                if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n                    // pedantic allows starting angle bracket without ending angle bracket\n                    href = href.slice(1);\n                }\n                else {\n                    href = href.slice(1, -1);\n                }\n            }\n            return outputLink(cap, {\n                href: href ? href.replace(this.rules.inline.anyPunctuation, '$1') : href,\n                title: title ? title.replace(this.rules.inline.anyPunctuation, '$1') : title\n            }, cap[0], this.lexer);\n        }\n    }\n    reflink(src, links) {\n        let cap;\n        if ((cap = this.rules.inline.reflink.exec(src))\n            || (cap = this.rules.inline.nolink.exec(src))) {\n            const linkString = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n            const link = links[linkString.toLowerCase()];\n            if (!link) {\n                const text = cap[0].charAt(0);\n                return {\n                    type: 'text',\n                    raw: text,\n                    text\n                };\n            }\n            return outputLink(cap, link, cap[0], this.lexer);\n        }\n    }\n    emStrong(src, maskedSrc, prevChar = '') {\n        let match = this.rules.inline.emStrongLDelim.exec(src);\n        if (!match)\n            return;\n        // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n        if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u))\n            return;\n        const nextChar = match[1] || match[2] || '';\n        if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n            // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n            const lLength = [...match[0]].length - 1;\n            let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n            const endReg = match[0][0] === '*' ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;\n            endReg.lastIndex = 0;\n            // Clip maskedSrc to same section of string as src (move to lexer?)\n            maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n            while ((match = endReg.exec(maskedSrc)) != null) {\n                rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n                if (!rDelim)\n                    continue; // skip single * in __abc*abc__\n                rLength = [...rDelim].length;\n                if (match[3] || match[4]) { // found another Left Delim\n                    delimTotal += rLength;\n                    continue;\n                }\n                else if (match[5] || match[6]) { // either Left or Right Delim\n                    if (lLength % 3 && !((lLength + rLength) % 3)) {\n                        midDelimTotal += rLength;\n                        continue; // CommonMark Emphasis Rules 9-10\n                    }\n                }\n                delimTotal -= rLength;\n                if (delimTotal > 0)\n                    continue; // Haven't found enough closing delimiters\n                // Remove extra characters. *a*** -> *a*\n                rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n                // char length can be >1 for unicode characters;\n                const lastCharLength = [...match[0]][0].length;\n                const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n                // Create `em` if smallest delimiter has odd char count. *a***\n                if (Math.min(lLength, rLength) % 2) {\n                    const text = raw.slice(1, -1);\n                    return {\n                        type: 'em',\n                        raw,\n                        text,\n                        tokens: this.lexer.inlineTokens(text)\n                    };\n                }\n                // Create 'strong' if smallest delimiter has even char count. **a***\n                const text = raw.slice(2, -2);\n                return {\n                    type: 'strong',\n                    raw,\n                    text,\n                    tokens: this.lexer.inlineTokens(text)\n                };\n            }\n        }\n    }\n    codespan(src) {\n        const cap = this.rules.inline.code.exec(src);\n        if (cap) {\n            let text = cap[2].replace(/\\n/g, ' ');\n            const hasNonSpaceChars = /[^ ]/.test(text);\n            const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n            if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n                text = text.substring(1, text.length - 1);\n            }\n            text = escape$1(text, true);\n            return {\n                type: 'codespan',\n                raw: cap[0],\n                text\n            };\n        }\n    }\n    br(src) {\n        const cap = this.rules.inline.br.exec(src);\n        if (cap) {\n            return {\n                type: 'br',\n                raw: cap[0]\n            };\n        }\n    }\n    del(src) {\n        const cap = this.rules.inline.del.exec(src);\n        if (cap) {\n            return {\n                type: 'del',\n                raw: cap[0],\n                text: cap[2],\n                tokens: this.lexer.inlineTokens(cap[2])\n            };\n        }\n    }\n    autolink(src) {\n        const cap = this.rules.inline.autolink.exec(src);\n        if (cap) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape$1(cap[1]);\n                href = 'mailto:' + text;\n            }\n            else {\n                text = escape$1(cap[1]);\n                href = text;\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text\n                    }\n                ]\n            };\n        }\n    }\n    url(src) {\n        let cap;\n        if (cap = this.rules.inline.url.exec(src)) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape$1(cap[0]);\n                href = 'mailto:' + text;\n            }\n            else {\n                // do extended autolink path validation\n                let prevCapZero;\n                do {\n                    prevCapZero = cap[0];\n                    cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? '';\n                } while (prevCapZero !== cap[0]);\n                text = escape$1(cap[0]);\n                if (cap[1] === 'www.') {\n                    href = 'http://' + cap[0];\n                }\n                else {\n                    href = cap[0];\n                }\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text\n                    }\n                ]\n            };\n        }\n    }\n    inlineText(src) {\n        const cap = this.rules.inline.text.exec(src);\n        if (cap) {\n            let text;\n            if (this.lexer.state.inRawBlock) {\n                text = cap[0];\n            }\n            else {\n                text = escape$1(cap[0]);\n            }\n            return {\n                type: 'text',\n                raw: cap[0],\n                text\n            };\n        }\n    }\n}\n\n/**\n * Block-Level Grammar\n */\nconst newline = /^(?: *(?:\\n|$))+/;\nconst blockCode = /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/;\nconst fences = /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/;\nconst hr = /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/;\nconst heading = /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/;\nconst bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nconst lheading = edit(/^(?!bull )((?:.|\\n(?!\\s*?\\n|bull ))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/)\n    .replace(/bull/g, bullet) // lists can interrupt\n    .getRegex();\nconst _paragraph = /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/;\nconst blockText = /^[^\\n]+/;\nconst _blockLabel = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nconst def = edit(/^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/)\n    .replace('label', _blockLabel)\n    .replace('title', /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/)\n    .getRegex();\nconst list = edit(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/)\n    .replace(/bull/g, bullet)\n    .getRegex();\nconst _tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n    + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n    + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n    + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n    + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n    + '|track|ul';\nconst _comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nconst html = edit('^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')', 'i')\n    .replace('comment', _comment)\n    .replace('tag', _tag)\n    .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst paragraph = edit(_paragraph)\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n    .replace('|table', '')\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockquote = edit(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/)\n    .replace('paragraph', paragraph)\n    .getRegex();\n/**\n * Normal Block Grammar\n */\nconst blockNormal = {\n    blockquote,\n    code: blockCode,\n    def,\n    fences,\n    heading,\n    hr,\n    html,\n    lheading,\n    list,\n    newline,\n    paragraph,\n    table: noopTest,\n    text: blockText\n};\n/**\n * GFM Block Grammar\n */\nconst gfmTable = edit('^ *([^\\\\n ].*)\\\\n' // Header\n    + ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)') // Cells\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('blockquote', ' {0,3}>')\n    .replace('code', ' {4}[^\\\\n]')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockGfm = {\n    ...blockNormal,\n    table: gfmTable,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n        .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n        .replace('table', gfmTable) // interrupt paragraphs with table\n        .replace('blockquote', ' {0,3}>')\n        .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n        .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n        .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n        .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n        .getRegex()\n};\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\nconst blockPedantic = {\n    ...blockNormal,\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)'\n        + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n        + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n        .replace('comment', _comment)\n        .replace(/tag/g, '(?!(?:'\n        + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n        + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n        + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n        .getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest, // fences not supported\n    lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' *#{1,6} *[^\\n]')\n        .replace('lheading', lheading)\n        .replace('|table', '')\n        .replace('blockquote', ' {0,3}>')\n        .replace('|fences', '')\n        .replace('|list', '')\n        .replace('|html', '')\n        .replace('|tag', '')\n        .getRegex()\n};\n/**\n * Inline-Level Grammar\n */\nconst escape = /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/;\nconst inlineCode = /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/;\nconst br = /^( {2,}|\\\\)\\n(?!\\s*$)/;\nconst inlineText = /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/;\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\nconst _punctuation = '\\\\p{P}$+<=>`^|~';\nconst punctuation = edit(/^((?![*_])[\\spunctuation])/, 'u')\n    .replace(/punctuation/g, _punctuation).getRegex();\n// sequences em should skip over [title](link), `code`, <html>\nconst blockSkip = /\\[[^[\\]]*?\\]\\([^\\(\\)]*?\\)|`[^`]*?`|<[^<>]*?>/g;\nconst emStrongLDelim = edit(/^(?:\\*+(?:((?!\\*)[punct])|[^\\s*]))|^_+(?:((?!_)[punct])|([^\\s_]))/, 'u')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst emStrongRDelimAst = edit('^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)' // Skip orphan inside strong\n    + '|[^*]+(?=[^*])' // Consume to delim\n    + '|(?!\\\\*)[punct](\\\\*+)(?=[\\\\s]|$)' // (1) #*** can only be a Right Delimiter\n    + '|[^punct\\\\s](\\\\*+)(?!\\\\*)(?=[punct\\\\s]|$)' // (2) a***#, a*** can only be a Right Delimiter\n    + '|(?!\\\\*)[punct\\\\s](\\\\*+)(?=[^punct\\\\s])' // (3) #***a, ***a can only be Left Delimiter\n    + '|[\\\\s](\\\\*+)(?!\\\\*)(?=[punct])' // (4) ***# can only be Left Delimiter\n    + '|(?!\\\\*)[punct](\\\\*+)(?!\\\\*)(?=[punct])' // (5) #***# can be either Left or Right Delimiter\n    + '|[^punct\\\\s](\\\\*+)(?=[^punct\\\\s])', 'gu') // (6) a***a can be either Left or Right Delimiter\n    .replace(/punct/g, _punctuation)\n    .getRegex();\n// (6) Not allowed for _\nconst emStrongRDelimUnd = edit('^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)' // Skip orphan inside strong\n    + '|[^_]+(?=[^_])' // Consume to delim\n    + '|(?!_)[punct](_+)(?=[\\\\s]|$)' // (1) #___ can only be a Right Delimiter\n    + '|[^punct\\\\s](_+)(?!_)(?=[punct\\\\s]|$)' // (2) a___#, a___ can only be a Right Delimiter\n    + '|(?!_)[punct\\\\s](_+)(?=[^punct\\\\s])' // (3) #___a, ___a can only be Left Delimiter\n    + '|[\\\\s](_+)(?!_)(?=[punct])' // (4) ___# can only be Left Delimiter\n    + '|(?!_)[punct](_+)(?!_)(?=[punct])', 'gu') // (5) #___# can be either Left or Right Delimiter\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst anyPunctuation = edit(/\\\\([punct])/, 'gu')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst autolink = edit(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/)\n    .replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/)\n    .replace('email', /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/)\n    .getRegex();\nconst _inlineComment = edit(_comment).replace('(?:-->|$)', '-->').getRegex();\nconst tag = edit('^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>') // CDATA section\n    .replace('comment', _inlineComment)\n    .replace('attribute', /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst _inlineLabel = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\nconst link = edit(/^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/)\n    .replace('label', _inlineLabel)\n    .replace('href', /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/)\n    .replace('title', /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/)\n    .getRegex();\nconst reflink = edit(/^!?\\[(label)\\]\\[(ref)\\]/)\n    .replace('label', _inlineLabel)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst nolink = edit(/^!?\\[(ref)\\](?:\\[\\])?/)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst reflinkSearch = edit('reflink|nolink(?!\\\\()', 'g')\n    .replace('reflink', reflink)\n    .replace('nolink', nolink)\n    .getRegex();\n/**\n * Normal Inline Grammar\n */\nconst inlineNormal = {\n    _backpedal: noopTest, // only used for GFM url\n    anyPunctuation,\n    autolink,\n    blockSkip,\n    br,\n    code: inlineCode,\n    del: noopTest,\n    emStrongLDelim,\n    emStrongRDelimAst,\n    emStrongRDelimUnd,\n    escape,\n    link,\n    nolink,\n    punctuation,\n    reflink,\n    reflinkSearch,\n    tag,\n    text: inlineText,\n    url: noopTest\n};\n/**\n * Pedantic Inline Grammar\n */\nconst inlinePedantic = {\n    ...inlineNormal,\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n        .replace('label', _inlineLabel)\n        .getRegex()\n};\n/**\n * GFM Inline Grammar\n */\nconst inlineGfm = {\n    ...inlineNormal,\n    escape: edit(escape).replace('])', '~|])').getRegex(),\n    url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/, 'i')\n        .replace('email', /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/)\n        .getRegex(),\n    _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\n/**\n * GFM + Line Breaks Inline Grammar\n */\nconst inlineBreaks = {\n    ...inlineGfm,\n    br: edit(br).replace('{2,}', '*').getRegex(),\n    text: edit(inlineGfm.text)\n        .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n        .replace(/\\{2,\\}/g, '*')\n        .getRegex()\n};\n/**\n * exports\n */\nconst block = {\n    normal: blockNormal,\n    gfm: blockGfm,\n    pedantic: blockPedantic\n};\nconst inline = {\n    normal: inlineNormal,\n    gfm: inlineGfm,\n    breaks: inlineBreaks,\n    pedantic: inlinePedantic\n};\n\n/**\n * Block Lexer\n */\nclass _Lexer {\n    tokens;\n    options;\n    state;\n    tokenizer;\n    inlineQueue;\n    constructor(options) {\n        // TokenList cannot be created in one go\n        this.tokens = [];\n        this.tokens.links = Object.create(null);\n        this.options = options || _defaults;\n        this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n        this.tokenizer = this.options.tokenizer;\n        this.tokenizer.options = this.options;\n        this.tokenizer.lexer = this;\n        this.inlineQueue = [];\n        this.state = {\n            inLink: false,\n            inRawBlock: false,\n            top: true\n        };\n        const rules = {\n            block: block.normal,\n            inline: inline.normal\n        };\n        if (this.options.pedantic) {\n            rules.block = block.pedantic;\n            rules.inline = inline.pedantic;\n        }\n        else if (this.options.gfm) {\n            rules.block = block.gfm;\n            if (this.options.breaks) {\n                rules.inline = inline.breaks;\n            }\n            else {\n                rules.inline = inline.gfm;\n            }\n        }\n        this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n    static get rules() {\n        return {\n            block,\n            inline\n        };\n    }\n    /**\n     * Static Lex Method\n     */\n    static lex(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    static lexInline(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    lex(src) {\n        src = src\n            .replace(/\\r\\n|\\r/g, '\\n');\n        this.blockTokens(src, this.tokens);\n        let next;\n        while (next = this.inlineQueue.shift()) {\n            this.inlineTokens(next.src, next.tokens);\n        }\n        return this.tokens;\n    }\n    blockTokens(src, tokens = []) {\n        if (this.options.pedantic) {\n            src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n        }\n        else {\n            src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n                return leading + '    '.repeat(tabs.length);\n            });\n        }\n        let token;\n        let lastToken;\n        let cutSrc;\n        let lastParagraphClipped;\n        while (src) {\n            if (this.options.extensions\n                && this.options.extensions.block\n                && this.options.extensions.block.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // newline\n            if (token = this.tokenizer.space(src)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.length === 1 && tokens.length > 0) {\n                    // if there's a single \\n as a spacer, it's terminating the last line,\n                    // so move it there so that we don't get unnecessary paragraph tags\n                    tokens[tokens.length - 1].raw += '\\n';\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.code(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                // An indented code block cannot interrupt a paragraph.\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // fences\n            if (token = this.tokenizer.fences(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // heading\n            if (token = this.tokenizer.heading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // hr\n            if (token = this.tokenizer.hr(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // blockquote\n            if (token = this.tokenizer.blockquote(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // list\n            if (token = this.tokenizer.list(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // html\n            if (token = this.tokenizer.html(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // def\n            if (token = this.tokenizer.def(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.raw;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else if (!this.tokens.links[token.tag]) {\n                    this.tokens.links[token.tag] = {\n                        href: token.href,\n                        title: token.title\n                    };\n                }\n                continue;\n            }\n            // table (gfm)\n            if (token = this.tokenizer.table(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // lheading\n            if (token = this.tokenizer.lheading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // top-level paragraph\n            // prevent paragraph consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startBlock) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startBlock.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n                lastToken = tokens[tokens.length - 1];\n                if (lastParagraphClipped && lastToken.type === 'paragraph') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                lastParagraphClipped = (cutSrc.length !== src.length);\n                src = src.substring(token.raw.length);\n                continue;\n            }\n            // text\n            if (token = this.tokenizer.text(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        this.state.top = true;\n        return tokens;\n    }\n    inline(src, tokens = []) {\n        this.inlineQueue.push({ src, tokens });\n        return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    inlineTokens(src, tokens = []) {\n        let token, lastToken, cutSrc;\n        // String with links masked to avoid interference with em and strong\n        let maskedSrc = src;\n        let match;\n        let keepPrevChar, prevChar;\n        // Mask out reflinks\n        if (this.tokens.links) {\n            const links = Object.keys(this.tokens.links);\n            if (links.length > 0) {\n                while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n                    if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n                        maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n                    }\n                }\n            }\n        }\n        // Mask out other blocks\n        while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n        }\n        // Mask out escaped characters\n        while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n        }\n        while (src) {\n            if (!keepPrevChar) {\n                prevChar = '';\n            }\n            keepPrevChar = false;\n            // extensions\n            if (this.options.extensions\n                && this.options.extensions.inline\n                && this.options.extensions.inline.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // escape\n            if (token = this.tokenizer.escape(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // tag\n            if (token = this.tokenizer.tag(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // link\n            if (token = this.tokenizer.link(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // reflink, nolink\n            if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // em & strong\n            if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.codespan(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // br\n            if (token = this.tokenizer.br(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // del (gfm)\n            if (token = this.tokenizer.del(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // autolink\n            if (token = this.tokenizer.autolink(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // url (gfm)\n            if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // text\n            // prevent inlineText consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startInline) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startInline.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (token = this.tokenizer.inlineText(cutSrc)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n                    prevChar = token.raw.slice(-1);\n                }\n                keepPrevChar = true;\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        return tokens;\n    }\n}\n\n/**\n * Renderer\n */\nclass _Renderer {\n    options;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    code(code, infostring, escaped) {\n        const lang = (infostring || '').match(/^\\S*/)?.[0];\n        code = code.replace(/\\n$/, '') + '\\n';\n        if (!lang) {\n            return '<pre><code>'\n                + (escaped ? code : escape$1(code, true))\n                + '</code></pre>\\n';\n        }\n        return '<pre><code class=\"language-'\n            + escape$1(lang)\n            + '\">'\n            + (escaped ? code : escape$1(code, true))\n            + '</code></pre>\\n';\n    }\n    blockquote(quote) {\n        return `<blockquote>\\n${quote}</blockquote>\\n`;\n    }\n    html(html, block) {\n        return html;\n    }\n    heading(text, level, raw) {\n        // ignore IDs\n        return `<h${level}>${text}</h${level}>\\n`;\n    }\n    hr() {\n        return '<hr>\\n';\n    }\n    list(body, ordered, start) {\n        const type = ordered ? 'ol' : 'ul';\n        const startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n        return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    }\n    listitem(text, task, checked) {\n        return `<li>${text}</li>\\n`;\n    }\n    checkbox(checked) {\n        return '<input '\n            + (checked ? 'checked=\"\" ' : '')\n            + 'disabled=\"\" type=\"checkbox\">';\n    }\n    paragraph(text) {\n        return `<p>${text}</p>\\n`;\n    }\n    table(header, body) {\n        if (body)\n            body = `<tbody>${body}</tbody>`;\n        return '<table>\\n'\n            + '<thead>\\n'\n            + header\n            + '</thead>\\n'\n            + body\n            + '</table>\\n';\n    }\n    tablerow(content) {\n        return `<tr>\\n${content}</tr>\\n`;\n    }\n    tablecell(content, flags) {\n        const type = flags.header ? 'th' : 'td';\n        const tag = flags.align\n            ? `<${type} align=\"${flags.align}\">`\n            : `<${type}>`;\n        return tag + content + `</${type}>\\n`;\n    }\n    /**\n     * span level renderer\n     */\n    strong(text) {\n        return `<strong>${text}</strong>`;\n    }\n    em(text) {\n        return `<em>${text}</em>`;\n    }\n    codespan(text) {\n        return `<code>${text}</code>`;\n    }\n    br() {\n        return '<br>';\n    }\n    del(text) {\n        return `<del>${text}</del>`;\n    }\n    link(href, title, text) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = '<a href=\"' + href + '\"';\n        if (title) {\n            out += ' title=\"' + title + '\"';\n        }\n        out += '>' + text + '</a>';\n        return out;\n    }\n    image(href, title, text) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = `<img src=\"${href}\" alt=\"${text}\"`;\n        if (title) {\n            out += ` title=\"${title}\"`;\n        }\n        out += '>';\n        return out;\n    }\n    text(text) {\n        return text;\n    }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass _TextRenderer {\n    // no need for block level renderers\n    strong(text) {\n        return text;\n    }\n    em(text) {\n        return text;\n    }\n    codespan(text) {\n        return text;\n    }\n    del(text) {\n        return text;\n    }\n    html(text) {\n        return text;\n    }\n    text(text) {\n        return text;\n    }\n    link(href, title, text) {\n        return '' + text;\n    }\n    image(href, title, text) {\n        return '' + text;\n    }\n    br() {\n        return '';\n    }\n}\n\n/**\n * Parsing & Compiling\n */\nclass _Parser {\n    options;\n    renderer;\n    textRenderer;\n    constructor(options) {\n        this.options = options || _defaults;\n        this.options.renderer = this.options.renderer || new _Renderer();\n        this.renderer = this.options.renderer;\n        this.renderer.options = this.options;\n        this.textRenderer = new _TextRenderer();\n    }\n    /**\n     * Static Parse Method\n     */\n    static parse(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    static parseInline(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    parse(tokens, top = true) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const token = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n                const genericToken = token;\n                const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n                if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            switch (token.type) {\n                case 'space': {\n                    continue;\n                }\n                case 'hr': {\n                    out += this.renderer.hr();\n                    continue;\n                }\n                case 'heading': {\n                    const headingToken = token;\n                    out += this.renderer.heading(this.parseInline(headingToken.tokens), headingToken.depth, unescape(this.parseInline(headingToken.tokens, this.textRenderer)));\n                    continue;\n                }\n                case 'code': {\n                    const codeToken = token;\n                    out += this.renderer.code(codeToken.text, codeToken.lang, !!codeToken.escaped);\n                    continue;\n                }\n                case 'table': {\n                    const tableToken = token;\n                    let header = '';\n                    // header\n                    let cell = '';\n                    for (let j = 0; j < tableToken.header.length; j++) {\n                        cell += this.renderer.tablecell(this.parseInline(tableToken.header[j].tokens), { header: true, align: tableToken.align[j] });\n                    }\n                    header += this.renderer.tablerow(cell);\n                    let body = '';\n                    for (let j = 0; j < tableToken.rows.length; j++) {\n                        const row = tableToken.rows[j];\n                        cell = '';\n                        for (let k = 0; k < row.length; k++) {\n                            cell += this.renderer.tablecell(this.parseInline(row[k].tokens), { header: false, align: tableToken.align[k] });\n                        }\n                        body += this.renderer.tablerow(cell);\n                    }\n                    out += this.renderer.table(header, body);\n                    continue;\n                }\n                case 'blockquote': {\n                    const blockquoteToken = token;\n                    const body = this.parse(blockquoteToken.tokens);\n                    out += this.renderer.blockquote(body);\n                    continue;\n                }\n                case 'list': {\n                    const listToken = token;\n                    const ordered = listToken.ordered;\n                    const start = listToken.start;\n                    const loose = listToken.loose;\n                    let body = '';\n                    for (let j = 0; j < listToken.items.length; j++) {\n                        const item = listToken.items[j];\n                        const checked = item.checked;\n                        const task = item.task;\n                        let itemBody = '';\n                        if (item.task) {\n                            const checkbox = this.renderer.checkbox(!!checked);\n                            if (loose) {\n                                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                                    }\n                                }\n                                else {\n                                    item.tokens.unshift({\n                                        type: 'text',\n                                        text: checkbox + ' '\n                                    });\n                                }\n                            }\n                            else {\n                                itemBody += checkbox + ' ';\n                            }\n                        }\n                        itemBody += this.parse(item.tokens, loose);\n                        body += this.renderer.listitem(itemBody, task, !!checked);\n                    }\n                    out += this.renderer.list(body, ordered, start);\n                    continue;\n                }\n                case 'html': {\n                    const htmlToken = token;\n                    out += this.renderer.html(htmlToken.text, htmlToken.block);\n                    continue;\n                }\n                case 'paragraph': {\n                    const paragraphToken = token;\n                    out += this.renderer.paragraph(this.parseInline(paragraphToken.tokens));\n                    continue;\n                }\n                case 'text': {\n                    let textToken = token;\n                    let body = textToken.tokens ? this.parseInline(textToken.tokens) : textToken.text;\n                    while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n                        textToken = tokens[++i];\n                        body += '\\n' + (textToken.tokens ? this.parseInline(textToken.tokens) : textToken.text);\n                    }\n                    out += top ? this.renderer.paragraph(body) : body;\n                    continue;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    parseInline(tokens, renderer) {\n        renderer = renderer || this.renderer;\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const token = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n                const ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n                if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            switch (token.type) {\n                case 'escape': {\n                    const escapeToken = token;\n                    out += renderer.text(escapeToken.text);\n                    break;\n                }\n                case 'html': {\n                    const tagToken = token;\n                    out += renderer.html(tagToken.text);\n                    break;\n                }\n                case 'link': {\n                    const linkToken = token;\n                    out += renderer.link(linkToken.href, linkToken.title, this.parseInline(linkToken.tokens, renderer));\n                    break;\n                }\n                case 'image': {\n                    const imageToken = token;\n                    out += renderer.image(imageToken.href, imageToken.title, imageToken.text);\n                    break;\n                }\n                case 'strong': {\n                    const strongToken = token;\n                    out += renderer.strong(this.parseInline(strongToken.tokens, renderer));\n                    break;\n                }\n                case 'em': {\n                    const emToken = token;\n                    out += renderer.em(this.parseInline(emToken.tokens, renderer));\n                    break;\n                }\n                case 'codespan': {\n                    const codespanToken = token;\n                    out += renderer.codespan(codespanToken.text);\n                    break;\n                }\n                case 'br': {\n                    out += renderer.br();\n                    break;\n                }\n                case 'del': {\n                    const delToken = token;\n                    out += renderer.del(this.parseInline(delToken.tokens, renderer));\n                    break;\n                }\n                case 'text': {\n                    const textToken = token;\n                    out += renderer.text(textToken.text);\n                    break;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n}\n\nclass _Hooks {\n    options;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    static passThroughHooks = new Set([\n        'preprocess',\n        'postprocess'\n    ]);\n    /**\n     * Process markdown before marked\n     */\n    preprocess(markdown) {\n        return markdown;\n    }\n    /**\n     * Process HTML after marked is finished\n     */\n    postprocess(html) {\n        return html;\n    }\n}\n\nclass Marked {\n    defaults = _getDefaults();\n    options = this.setOptions;\n    parse = this.#parseMarkdown(_Lexer.lex, _Parser.parse);\n    parseInline = this.#parseMarkdown(_Lexer.lexInline, _Parser.parseInline);\n    Parser = _Parser;\n    Renderer = _Renderer;\n    TextRenderer = _TextRenderer;\n    Lexer = _Lexer;\n    Tokenizer = _Tokenizer;\n    Hooks = _Hooks;\n    constructor(...args) {\n        this.use(...args);\n    }\n    /**\n     * Run callback for every token\n     */\n    walkTokens(tokens, callback) {\n        let values = [];\n        for (const token of tokens) {\n            values = values.concat(callback.call(this, token));\n            switch (token.type) {\n                case 'table': {\n                    const tableToken = token;\n                    for (const cell of tableToken.header) {\n                        values = values.concat(this.walkTokens(cell.tokens, callback));\n                    }\n                    for (const row of tableToken.rows) {\n                        for (const cell of row) {\n                            values = values.concat(this.walkTokens(cell.tokens, callback));\n                        }\n                    }\n                    break;\n                }\n                case 'list': {\n                    const listToken = token;\n                    values = values.concat(this.walkTokens(listToken.items, callback));\n                    break;\n                }\n                default: {\n                    const genericToken = token;\n                    if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n                        this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n                            values = values.concat(this.walkTokens(genericToken[childTokens], callback));\n                        });\n                    }\n                    else if (genericToken.tokens) {\n                        values = values.concat(this.walkTokens(genericToken.tokens, callback));\n                    }\n                }\n            }\n        }\n        return values;\n    }\n    use(...args) {\n        const extensions = this.defaults.extensions || { renderers: {}, childTokens: {} };\n        args.forEach((pack) => {\n            // copy options to new object\n            const opts = { ...pack };\n            // set async to true if it was set to true before\n            opts.async = this.defaults.async || opts.async || false;\n            // ==-- Parse \"addon\" extensions --== //\n            if (pack.extensions) {\n                pack.extensions.forEach((ext) => {\n                    if (!ext.name) {\n                        throw new Error('extension name required');\n                    }\n                    if ('renderer' in ext) { // Renderer extensions\n                        const prevRenderer = extensions.renderers[ext.name];\n                        if (prevRenderer) {\n                            // Replace extension with func to run new extension but fall back if false\n                            extensions.renderers[ext.name] = function (...args) {\n                                let ret = ext.renderer.apply(this, args);\n                                if (ret === false) {\n                                    ret = prevRenderer.apply(this, args);\n                                }\n                                return ret;\n                            };\n                        }\n                        else {\n                            extensions.renderers[ext.name] = ext.renderer;\n                        }\n                    }\n                    if ('tokenizer' in ext) { // Tokenizer Extensions\n                        if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n                            throw new Error(\"extension level must be 'block' or 'inline'\");\n                        }\n                        const extLevel = extensions[ext.level];\n                        if (extLevel) {\n                            extLevel.unshift(ext.tokenizer);\n                        }\n                        else {\n                            extensions[ext.level] = [ext.tokenizer];\n                        }\n                        if (ext.start) { // Function to check for start of token\n                            if (ext.level === 'block') {\n                                if (extensions.startBlock) {\n                                    extensions.startBlock.push(ext.start);\n                                }\n                                else {\n                                    extensions.startBlock = [ext.start];\n                                }\n                            }\n                            else if (ext.level === 'inline') {\n                                if (extensions.startInline) {\n                                    extensions.startInline.push(ext.start);\n                                }\n                                else {\n                                    extensions.startInline = [ext.start];\n                                }\n                            }\n                        }\n                    }\n                    if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens\n                        extensions.childTokens[ext.name] = ext.childTokens;\n                    }\n                });\n                opts.extensions = extensions;\n            }\n            // ==-- Parse \"overwrite\" extensions --== //\n            if (pack.renderer) {\n                const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n                for (const prop in pack.renderer) {\n                    if (!(prop in renderer) || prop === 'options') {\n                        throw new Error(`renderer '${prop}' does not exist`);\n                    }\n                    const rendererProp = prop;\n                    const rendererFunc = pack.renderer[rendererProp];\n                    const prevRenderer = renderer[rendererProp];\n                    // Replace renderer with func to run extension, but fall back if false\n                    renderer[rendererProp] = (...args) => {\n                        let ret = rendererFunc.apply(renderer, args);\n                        if (ret === false) {\n                            ret = prevRenderer.apply(renderer, args);\n                        }\n                        return ret || '';\n                    };\n                }\n                opts.renderer = renderer;\n            }\n            if (pack.tokenizer) {\n                const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n                for (const prop in pack.tokenizer) {\n                    if (!(prop in tokenizer) || ['options', 'rules', 'lexer'].includes(prop)) {\n                        throw new Error(`tokenizer '${prop}' does not exist`);\n                    }\n                    const tokenizerProp = prop;\n                    const tokenizerFunc = pack.tokenizer[tokenizerProp];\n                    const prevTokenizer = tokenizer[tokenizerProp];\n                    // Replace tokenizer with func to run extension, but fall back if false\n                    // @ts-expect-error cannot type tokenizer function dynamically\n                    tokenizer[tokenizerProp] = (...args) => {\n                        let ret = tokenizerFunc.apply(tokenizer, args);\n                        if (ret === false) {\n                            ret = prevTokenizer.apply(tokenizer, args);\n                        }\n                        return ret;\n                    };\n                }\n                opts.tokenizer = tokenizer;\n            }\n            // ==-- Parse Hooks extensions --== //\n            if (pack.hooks) {\n                const hooks = this.defaults.hooks || new _Hooks();\n                for (const prop in pack.hooks) {\n                    if (!(prop in hooks) || prop === 'options') {\n                        throw new Error(`hook '${prop}' does not exist`);\n                    }\n                    const hooksProp = prop;\n                    const hooksFunc = pack.hooks[hooksProp];\n                    const prevHook = hooks[hooksProp];\n                    if (_Hooks.passThroughHooks.has(prop)) {\n                        hooks[hooksProp] = (arg) => {\n                            if (this.defaults.async) {\n                                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                                    return prevHook.call(hooks, ret);\n                                });\n                            }\n                            const ret = hooksFunc.call(hooks, arg);\n                            return prevHook.call(hooks, ret);\n                        };\n                    }\n                    else {\n                        hooks[hooksProp] = (...args) => {\n                            let ret = hooksFunc.apply(hooks, args);\n                            if (ret === false) {\n                                ret = prevHook.apply(hooks, args);\n                            }\n                            return ret;\n                        };\n                    }\n                }\n                opts.hooks = hooks;\n            }\n            // ==-- Parse WalkTokens extensions --== //\n            if (pack.walkTokens) {\n                const walkTokens = this.defaults.walkTokens;\n                const packWalktokens = pack.walkTokens;\n                opts.walkTokens = function (token) {\n                    let values = [];\n                    values.push(packWalktokens.call(this, token));\n                    if (walkTokens) {\n                        values = values.concat(walkTokens.call(this, token));\n                    }\n                    return values;\n                };\n            }\n            this.defaults = { ...this.defaults, ...opts };\n        });\n        return this;\n    }\n    setOptions(opt) {\n        this.defaults = { ...this.defaults, ...opt };\n        return this;\n    }\n    lexer(src, options) {\n        return _Lexer.lex(src, options ?? this.defaults);\n    }\n    parser(tokens, options) {\n        return _Parser.parse(tokens, options ?? this.defaults);\n    }\n    #parseMarkdown(lexer, parser) {\n        return (src, options) => {\n            const origOpt = { ...options };\n            const opt = { ...this.defaults, ...origOpt };\n            // Show warning if an extension set async to true but the parse was called with async: false\n            if (this.defaults.async === true && origOpt.async === false) {\n                if (!opt.silent) {\n                    console.warn('marked(): The async option was set to true by an extension. The async: false option sent to parse will be ignored.');\n                }\n                opt.async = true;\n            }\n            const throwError = this.#onError(!!opt.silent, !!opt.async);\n            // throw error in case of non string input\n            if (typeof src === 'undefined' || src === null) {\n                return throwError(new Error('marked(): input parameter is undefined or null'));\n            }\n            if (typeof src !== 'string') {\n                return throwError(new Error('marked(): input parameter is of type '\n                    + Object.prototype.toString.call(src) + ', string expected'));\n            }\n            if (opt.hooks) {\n                opt.hooks.options = opt;\n            }\n            if (opt.async) {\n                return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n                    .then(src => lexer(src, opt))\n                    .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n                    .then(tokens => parser(tokens, opt))\n                    .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n                    .catch(throwError);\n            }\n            try {\n                if (opt.hooks) {\n                    src = opt.hooks.preprocess(src);\n                }\n                const tokens = lexer(src, opt);\n                if (opt.walkTokens) {\n                    this.walkTokens(tokens, opt.walkTokens);\n                }\n                let html = parser(tokens, opt);\n                if (opt.hooks) {\n                    html = opt.hooks.postprocess(html);\n                }\n                return html;\n            }\n            catch (e) {\n                return throwError(e);\n            }\n        };\n    }\n    #onError(silent, async) {\n        return (e) => {\n            e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n            if (silent) {\n                const msg = '<p>An error occurred:</p><pre>'\n                    + escape$1(e.message + '', true)\n                    + '</pre>';\n                if (async) {\n                    return Promise.resolve(msg);\n                }\n                return msg;\n            }\n            if (async) {\n                return Promise.reject(e);\n            }\n            throw e;\n        };\n    }\n}\n\nconst markedInstance = new Marked();\nfunction marked(src, opt) {\n    return markedInstance.parse(src, opt);\n}\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options =\n    marked.setOptions = function (options) {\n        markedInstance.setOptions(options);\n        marked.defaults = markedInstance.defaults;\n        changeDefaults(marked.defaults);\n        return marked;\n    };\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\nmarked.defaults = _defaults;\n/**\n * Use Extension\n */\nmarked.use = function (...args) {\n    markedInstance.use(...args);\n    marked.defaults = markedInstance.defaults;\n    changeDefaults(marked.defaults);\n    return marked;\n};\n/**\n * Run callback for every token\n */\nmarked.walkTokens = function (tokens, callback) {\n    return markedInstance.walkTokens(tokens, callback);\n};\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = _Parser.parse;\nconst lexer = _Lexer.lex;\n\nexport { _Hooks as Hooks, _Lexer as Lexer, Marked, _Parser as Parser, _Renderer as Renderer, _TextRenderer as TextRenderer, _Tokenizer as Tokenizer, _defaults as defaults, _getDefaults as getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n//# sourceMappingURL=marked.esm.js.map\n","<template>\n  <v-row v-if=\"items\" dense>\n    <!-- Side navigatin column -->\n    <v-col\n      v-if=\"$vuetify.breakpoint.smAndUp && !fullscreen\"\n      cols=\"12\"\n      :sm=\"fullscreen ? 1 : 3\"\n    >\n      <v-card height=\"100%\" flat class=\"fixed-nav px-2\">\n        <v-card-title v-if=\"!fullscreen\" primary-title class=\"capitalize navy\">\n          {{ category }}\n        </v-card-title>\n        <v-card-text v-if=\"!fullscreen\" class=\"scroll\">\n          <v-list flat>\n            <v-list-item-group :value=\"activeListItem\" mandatory class=\"maroon\">\n              <v-list-item\n                v-for=\"(item, i) in items\"\n                :key=\"i\"\n                class=\"list-itemss\"\n              >\n                <v-list-item-content>\n                  <v-tooltip bottom>\n                    <template v-slot:activator=\"{ on, attrs }\">\n                      <v-list-item-title\n                        v-bind=\"attrs\"\n                        v-on=\"on\"\n                        @click=\"\n                          selectedItem = item;\n                          onSelectItem();\n                        \"\n                      >\n                        <small>{{ item.title }}</small>\n                      </v-list-item-title>\n                    </template>\n                    <span>{{ item.title }}</span>\n                  </v-tooltip>\n                </v-list-item-content>\n              </v-list-item>\n            </v-list-item-group>\n          </v-list>\n        </v-card-text>\n        <v-card-text v-else class=\"scroll capitalize\">\n          <v-btn icon @click=\"fullscreen = false\">\n            <v-icon>mdi-arrow-right</v-icon>\n          </v-btn>\n        </v-card-text>\n      </v-card>\n      <!-- Main Screen 'Content' -->\n    </v-col>\n    <!-- Content column -->\n    <v-col cols=\"11\" :sm=\"fullscreen ? 11 : 6\">\n      <v-card width=\"100%\" flat>\n        <div\n          class=\"capitalize px-4\"\n          :class=\"{\n            'fixed-title-full': fullscreen,\n            'fixed-title': !fullscreen,\n          }\"\n        >\n          <div>\n            <v-btn\n              text\n              color=\"#b78727\"\n              small\n              @click=\"$router.push({ name: 'homePage' })\"\n              >Home</v-btn\n            >\n            /\n            <v-btn small text color=\"grey\" disabled>{{ category }}</v-btn>\n          </div>\n          <v-row dense class=\"pb-2\" align=\"center\">\n            <v-col sm=\"10\" cols=\"12\">\n              <v-select\n                v-model=\"selectedItem\"\n                :items=\"items\"\n                item-text=\"title\"\n                label=\"select\"\n                return-object\n                dense\n                solo\n                flat\n                fill\n                full-width\n                hide-details\n                color=\"white\"\n                class=\"sm-font bold\"\n                @input=\"onSelectItem\"\n              ></v-select>\n            </v-col>\n\n            <v-col v-if=\"$vuetify.breakpoint.smAndUp\" cols=\"12\" sm=\"2\">\n              <v-tooltip bottom>\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <v-btn\n                    v-bind=\"attrs\"\n                    v-on=\"on\"\n                    icon\n                    x-small\n                    class=\"mr-2\"\n                    color=\"#b78727\"\n                    @click=\"fullscreen = !fullscreen\"\n                  >\n                    <v-icon>\n                      {{\n                        fullscreen ? \"mdi-fullscreen-exit\" : \"mdi-fullscreen\"\n                      }}\n                    </v-icon>\n                  </v-btn>\n                </template>\n                <span>{{\n                  fullscreen ? \"Exit fullscreen\" : \"Read in fullscreen mode\"\n                }}</span>\n              </v-tooltip>\n              <v-tooltip bottom>\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <v-btn\n                    v-bind=\"attrs\"\n                    v-on=\"on\"\n                    color=\"#b78727\"\n                    x-small\n                    icon\n                    class=\"pr-2\"\n                  >\n                    <v-icon>mdi-share-variant</v-icon>\n                  </v-btn>\n                </template>\n                <span>Share</span>\n              </v-tooltip>\n            </v-col>\n          </v-row>\n          <v-divider></v-divider>\n        </div>\n        <v-card-text class=\"card-text\">\n          <!-- <v-img\n            src=\"@/assets/images/dreams.jpg\"\n            height=\"auto\"\n            width=\"auto\"\n            class=\"mb-4 main-img\"\n          ></v-img> -->\n          <section v-if=\"Object.keys(selectedItem.properties).length > 0\">\n            <div\n              v-for=\"(key, z) in Object.keys(selectedItem.properties)\"\n              :key=\"z\"\n            >\n              <label class=\"navy capitalize\">{{ key }}:</label>\n              {{ selectedItem.properties[key] }}\n            </div>\n            <v-divider class=\"my-2\" />\n          </section>\n          <section v-if=\"selectedItem.isMarkDown\">\n            <div\n              v-html=\"parseMarkDown(selectedItem.markDown)\"\n              class=\"markdown\"\n            ></div>\n          </section>\n          <section v-else>\n            <h3 class=\"maroon\"></h3>\n            <div>{{ selectedItem.interpretation }}</div>\n          </section>\n          <section v-if=\"selectedItem.bibleVerses\" class=\"mt-4\">\n            <h3 class=\"maroon mb-4\">\n              {{\n                $store.state.locale == \"ar\"\n                  ? \"آيات ذات صلة من الكتاب المقدس\"\n                  : \"Related Verses from The Bible\"\n              }}\n            </h3>\n            <v-card\n              v-for=\"(verse, v) in selectedItem.bibleVerses\"\n              :key=\"v\"\n              class=\"elevation-6 mb-4 verse-card\"\n            >\n              <v-card-text> &ldquo;{{ verse }}&rdquo; </v-card-text>\n            </v-card>\n          </section>\n          <section v-if=\"selectedItem.references.length\">\n            <h3 class=\"maroon mb-4\">\n              {{ $store.state.locale == \"ar\" ? \"مصادر\" : \"References\" }}\n            </h3>\n\n            <v-responsive\n              v-for=\"(reference, w) in selectedItem.references\"\n              :key=\"w\"\n              aspect-ratio=\"16/9\"\n            >\n              <iframe\n                width=\"300\"\n                height=\"200\"\n                :src=\"`https://www.youtube.com/embed/${reference}`\"\n                frameborder=\"0\"\n                allowfullscreen\n                class=\"main-img\"\n              ></iframe>\n            </v-responsive>\n          </section>\n        </v-card-text>\n      </v-card>\n    </v-col>\n    <!-- Image column -->\n    <v-col v-if=\"!fullscreen\" cols=\"12\" class=\"resources\">\n      <!-- <div>\n        <v-img\n          src=\"@/assets/images/dreams.jpg\"\n          height=\"50%\"\n          width=\"auto\"\n        ></v-img>\n      </div> -->\n      <div class=\"mt-4\">\n        <h4 class=\"navy\">\n          {{ $store.state.locale == \"ar\" ? \"مصادر\" : \"Resources\" }}\n          <span class=\"mx-4\"\n            ><v-btn x-small icon @click=\"hideMedia = !hideMedia\"\n              ><v-icon>{{\n                hideMedia ? \"mdi-eye\" : \"mdi-eye-off\"\n              }}</v-icon></v-btn\n            ></span\n          >\n        </h4>\n        <div v-if=\"!hideMedia\">\n          <h5>Father Dawood Lamie</h5>\n          <v-responsive aspect-ratio=\"16/9\" class=\"mb-4\">\n            <iframe\n              width=\"300\"\n              height=\"200\"\n              src=\"https://www.youtube.com/embed/C3qL54EnW20\"\n              frameborder=\"2\"\n              allowfullscreen\n            ></iframe>\n          </v-responsive>\n          <h5>How to read the bible</h5>\n          <v-responsive aspect-ratio=\"16/9\">\n            <iframe\n              width=\"300\"\n              height=\"200\"\n              src=\"https://www.youtube.com/embed/7bIUIFMZY6c\"\n              frameborder=\"2\"\n              allowfullscreen\n              @click=\"console.log('he')\"\n            ></iframe>\n          </v-responsive>\n          <h5>How to read the bible</h5>\n          <v-responsive aspect-ratio=\"16/9\">\n            <iframe\n              width=\"300\"\n              height=\"200\"\n              src=\"https://www.youtube.com/embed/7bIUIFMZY6c\"\n              frameborder=\"2\"\n              allowfullscreen\n            ></iframe>\n          </v-responsive>\n          <h5>How to read the bible</h5>\n          <v-responsive aspect-ratio=\"16/9\">\n            <iframe\n              width=\"300\"\n              height=\"200\"\n              src=\"https://www.youtube.com/embed/7bIUIFMZY6c\"\n              frameborder=\"2\"\n              allowfullscreen\n            ></iframe>\n          </v-responsive>\n          <h5>How to read the bible</h5>\n          <v-responsive aspect-ratio=\"16/9\">\n            <iframe\n              width=\"300\"\n              height=\"200\"\n              src=\"https://www.youtube.com/embed/7bIUIFMZY6c\"\n              frameborder=\"2\"\n              allowfullscreen\n            ></iframe>\n          </v-responsive>\n          <h5>How to read the bible</h5>\n          <v-responsive aspect-ratio=\"16/9\">\n            <iframe\n              width=\"300\"\n              height=\"200\"\n              src=\"https://www.youtube.com/embed/7bIUIFMZY6c\"\n              frameborder=\"2\"\n              allowfullscreen\n            ></iframe>\n          </v-responsive>\n          <h5>How to read the bible</h5>\n          <v-responsive aspect-ratio=\"16/9\">\n            <iframe\n              width=\"300\"\n              height=\"200\"\n              src=\"https://www.youtube.com/embed/7bIUIFMZY6c\"\n              frameborder=\"2\"\n              allowfullscreen\n            ></iframe>\n          </v-responsive>\n          <h5>How to read the bible</h5>\n          <v-responsive aspect-ratio=\"16/9\">\n            <iframe\n              width=\"300\"\n              height=\"200\"\n              src=\"https://www.youtube.com/embed/7bIUIFMZY6c\"\n              frameborder=\"2\"\n              allowfullscreen\n            ></iframe>\n          </v-responsive>\n          <h5>How to read the bible</h5>\n          <v-responsive aspect-ratio=\"16/9\">\n            <iframe\n              width=\"300\"\n              height=\"200\"\n              src=\"https://www.youtube.com/embed/7bIUIFMZY6c\"\n              frameborder=\"2\"\n              allowfullscreen\n            ></iframe>\n          </v-responsive>\n          <h5>How to read the bible</h5>\n          <v-responsive aspect-ratio=\"16/9\">\n            <iframe\n              width=\"300\"\n              height=\"200\"\n              src=\"https://www.youtube.com/embed/7bIUIFMZY6c\"\n              frameborder=\"2\"\n              allowfullscreen\n            ></iframe>\n          </v-responsive>\n          <h5>How to read the bible</h5>\n          <v-responsive aspect-ratio=\"16/9\">\n            <iframe\n              width=\"300\"\n              height=\"200\"\n              src=\"https://www.youtube.com/embed/7bIUIFMZY6c\"\n              frameborder=\"2\"\n              allowfullscreen\n            ></iframe>\n          </v-responsive>\n          <h5>How to read the bible</h5>\n          <v-responsive aspect-ratio=\"16/9\">\n            <iframe\n              width=\"300\"\n              height=\"200\"\n              src=\"https://www.youtube.com/embed/7bIUIFMZY6c\"\n              frameborder=\"2\"\n              allowfullscreen\n            ></iframe>\n          </v-responsive>\n          <h5>How to read the bible</h5>\n          <v-responsive aspect-ratio=\"16/9\">\n            <iframe\n              width=\"300\"\n              height=\"200\"\n              src=\"https://www.youtube.com/embed/7bIUIFMZY6c\"\n              frameborder=\"2\"\n              allowfullscreen\n            ></iframe>\n          </v-responsive>\n          <h5>How to read the bible</h5>\n          <v-responsive aspect-ratio=\"16/9\">\n            <iframe\n              width=\"300\"\n              height=\"200\"\n              src=\"https://www.youtube.com/embed/7bIUIFMZY6c\"\n              frameborder=\"2\"\n              allowfullscreen\n            ></iframe>\n          </v-responsive>\n          <h5>How to read the bible</h5>\n          <v-responsive aspect-ratio=\"16/9\">\n            <iframe\n              width=\"300\"\n              height=\"200\"\n              src=\"https://www.youtube.com/embed/7bIUIFMZY6c\"\n              frameborder=\"2\"\n              allowfullscreen\n            ></iframe>\n          </v-responsive>\n          <h5>How to read the bible</h5>\n          <v-responsive aspect-ratio=\"16/9\">\n            <iframe\n              width=\"300\"\n              height=\"200\"\n              src=\"https://www.youtube.com/embed/7bIUIFMZY6c\"\n              frameborder=\"2\"\n              allowfullscreen\n            ></iframe>\n          </v-responsive>\n        </div>\n      </div>\n    </v-col>\n  </v-row>\n</template>\n<script>\nimport { marked } from \"marked\";\nexport default {\n  props: {\n    items: { type: Array, required: true },\n    category: { type: String, required: true },\n  },\n  data() {\n    return {\n      selectedItem: {},\n      activeListItem: {},\n      fullscreen: false,\n      ulr: null,\n      hideMedia: false,\n      currentCategory: null,\n      breadcrumbs: [\n        {\n          text: \"Home\",\n          disabled: false,\n          href: \"homePage\",\n        },\n      ],\n    };\n  },\n  created() {\n    const itemId = this.$route.query.itemId;\n    this.selectedItem = itemId ? this.items[itemId - 1] : this.items[0];\n    this.activeListItem = itemId - 1;\n    this.url = this.$route.path;\n    this.breadcrumbs.push({\n      text: this.category,\n      disabled: true,\n      href: \"\",\n    });\n  },\n  methods: {\n    onSelectItem() {\n      this.$router.push({ query: { itemId: this.selectedItem.id } });\n    },\n    parseMarkDown(content) {\n      return marked.parse(content);\n    },\n  },\n};\n</script>\n<style scoped>\n.scroll {\n  overflow-y: scroll;\n  height: 600px;\n}\n.capitalize {\n  text-transform: capitalize;\n}\n.list-item {\n  text-transform: capitalize;\n  font-size: 8px !important;\n}\n\nh3 {\n  margin-bottom: 2px;\n  margin-top: 2px;\n}\n.fixed-title {\n  position: fixed !important;\n  top: 70px;\n  left: 25%;\n  width: 50%;\n  background-color: white;\n  z-index: 1000;\n  /* height: 100px;\n  overflow: hidden; */\n  font-size: 14px;\n}\n.fixed-title-full {\n  position: fixed !important;\n  top: 70px;\n  width: 100%;\n  background-color: white;\n  z-index: 1000;\n  /* height: 100px;\n  overflow: hidden; */\n  font-size: 14px;\n}\n.fixed-breadcrumbs {\n  position: fixed;\n  top: 60px;\n  left: 0%;\n  width: 100%;\n  background-color: white;\n  z-index: 1000;\n}\n\n.fixed-nav {\n  position: fixed;\n  top: 70px;\n  width: 25%;\n  left: 0%;\n}\n.resources {\n  position: fixed;\n  top: 10%;\n  width: 24%;\n  right: 0%;\n  padding: 4px;\n  height: 100%;\n  overflow-y: scroll;\n}\n.card-text {\n  margin-top: 80px;\n}\n.main-img {\n  display: none;\n}\n.sm-font {\n  font-size: 16px !important;\n}\n.bold {\n  font-weight: bold;\n}\n::v-deep .markdown h1 {\n  color: #800000 !important;\n  margin-bottom: 10px !important;\n}\n::v-deep .markdown h2 {\n  color: #800000 !important;\n  margin-bottom: 10px !important;\n}\n::v-deep .markdown h3 {\n  color: #800000 !important;\n  margin-bottom: 10px !important;\n}\n::v-deep .markdown h4 {\n  color: #800000 !important;\n  margin-bottom: 10px !important;\n}\nheader {\n  color: #800000;\n  margin-bottom: 10px;\n}\n.verse-card {\n  border-left: 4px solid #800000 !important;\n}\n@media (max-width: 576px) {\n  .main-img {\n    display: block;\n  }\n  .breadcrumbs {\n    height: 20px;\n    width: 100%;\n    background-color: white;\n    z-index: 1000;\n  }\n  .fixed-title,\n  .fixed-title-full {\n    position: sticky !important;\n    top: 15px;\n    left: 0%;\n    width: 100%;\n    background-color: white;\n    z-index: 10;\n    font-size: 10px;\n    line-height: 20px;\n  }\n  .fixed-nav {\n    display: none;\n  }\n  .fixed-img {\n    display: none;\n  }\n\n  .card-text {\n    margin-top: 0px;\n  }\n  .sm-font {\n    font-size: 12px !important;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CanvasOne.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CanvasOne.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./CanvasOne.vue?vue&type=template&id=0fadb68c&scoped=true\"\nimport script from \"./CanvasOne.vue?vue&type=script&lang=js\"\nexport * from \"./CanvasOne.vue?vue&type=script&lang=js\"\nimport style0 from \"./CanvasOne.vue?vue&type=style&index=0&id=0fadb68c&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0fadb68c\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <canvas-one :items=\"items\" :category=\"category\" />\n</template>\n<script>\nimport CanvasOne from \"@/components/canvases/CanvasOne.vue\";\nimport { loadJsData } from \"@/utilities/DataLoader\";\nexport default {\n  components: { CanvasOne },\n  props: {\n    canvasType: { required: true },\n    dataSet: { type: String },\n    category: { type: String },\n  },\n  data() {\n    return { items: null };\n  },\n  created() {\n    this.items = loadJsData(this.dataSet)[this.$store.state.locale];\n  },\n};\n</script>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CanvasPage.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CanvasPage.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./CanvasPage.vue?vue&type=template&id=77f2cac4\"\nimport script from \"./CanvasPage.vue?vue&type=script&lang=js\"\nexport * from \"./CanvasPage.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import './VResponsive.sass'\n\n// Mixins\nimport Measurable, { NumberOrNumberString } from '../../mixins/measurable'\n\n// Types\nimport { VNode } from 'vue'\n\n// Utils\nimport mixins from '../../util/mixins'\nimport { getSlot } from '../../util/helpers'\n\n/* @vue/component */\nexport default mixins(Measurable).extend({\n  name: 'v-responsive',\n\n  props: {\n    aspectRatio: [String, Number] as NumberOrNumberString,\n    contentClass: String,\n  },\n\n  computed: {\n    computedAspectRatio (): number {\n      return Number(this.aspectRatio)\n    },\n    aspectStyle (): object | undefined {\n      return this.computedAspectRatio\n        ? { paddingBottom: (1 / this.computedAspectRatio) * 100 + '%' }\n        : undefined\n    },\n    __cachedSizer (): VNode | [] {\n      if (!this.aspectStyle) return []\n\n      return this.$createElement('div', {\n        style: this.aspectStyle,\n        staticClass: 'v-responsive__sizer',\n      })\n    },\n  },\n\n  methods: {\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-responsive__content',\n        class: this.contentClass,\n      }, getSlot(this))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-responsive',\n      style: this.measurableStyles,\n      on: this.$listeners,\n    }, [\n      this.__cachedSizer,\n      this.genContent(),\n    ])\n  },\n})\n"],"names":["render","_vm","this","_c","_self","attrs","items","category","staticRenderFns","mixins","Colorable","Delayable","Dependent","Menuable","extend","name","props","closeDelay","type","Number","String","default","disabled","Boolean","openDelay","openOnHover","openOnFocus","tag","transition","data","calculatedMinWidth","closeDependents","computed","calculatedLeft","activator","content","dimensions","unknown","bottom","left","top","right","activatorLeft","attach","offsetLeft","width","nudgeLeft","parseInt","nudgeRight","calcXOverflow","calculatedTop","activatorTop","offsetTop","height","nudgeTop","nudgeBottom","pageYOffset","calcYOverflow","classes","computedTransition","isActive","offsetY","offsetX","styles","maxWidth","convertToUnit","minWidth","zIndex","activeZIndex","beforeMount","$nextTick","value","callActivate","mounted","getSlotType","consoleError","methods","activate","updateDimensions","requestAnimationFrame","startTransition","deactivate","runDelay","genActivatorListeners","listeners","Activatable","focus","e","getActivator","blur","keydown","keyCode","keyCodes","genActivatorAttributes","genTransition","genContent","$createElement","setBackgroundColor","color","staticClass","class","contentClass","menuable__content__active","activatorFixed","style","getScopeIdAttrs","directives","isContentActive","ref","getContentSlot","h","showLazyContent","genActivator","fullscreen","i","scopedSlots","selectedItem","onSelectItem","on","_v","model","callback","expression","fn","Object","key","_s","interpretation","bibleVerses","_e","$event","hideMedia","console","_getDefaults","async","breaks","extensions","gfm","hooks","pedantic","renderer","silent","tokenizer","walkTokens","_defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","RegExp","source","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape$1","html","encode","test","replace","unescapeTest","_","n","toLowerCase","charAt","fromCharCode","substring","caret","edit","regex","opt","obj","val","valSource","getRegex","cleanUrl","href","encodeURI","noopTest","exec","splitCells","tableRow","count","row","match","offset","str","escaped","curr","cells","split","trim","shift","length","pop","splice","push","rtrim","c","invert","l","suffLen","currChar","slice","findClosingBracket","b","indexOf","level","outputLink","cap","link","raw","lexer","title","text","state","inLink","token","tokens","inlineTokens","indentCodeCompensation","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","join","_Tokenizer","options","rules","constructor","space","src","block","newline","code","codeBlockStyle","fences","lang","inline","anyPunctuation","heading","trimmed","depth","hr","blockquote","blockTokens","list","bull","isordered","ordered","start","loose","itemRegex","itemContents","endsWithBlankLine","endEarly","line","t","repeat","nextLine","indent","trimStart","search","blankLine","nextBulletRegex","Math","min","hrRegex","fencesBeginRegex","headingBeginRegex","rawLine","ischecked","istask","task","checked","trimEnd","spacers","filter","hasMultipleLineBreaks","some","pre","def","table","headers","aligns","rows","item","header","align","cell","lheading","paragraph","escape","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","reflink","links","nolink","linkString","emStrong","maskedSrc","prevChar","emStrongLDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","emStrongRDelimAst","emStrongRDelimUnd","lastIndex","lastCharLength","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","blockCode","bullet","_paragraph","blockText","_blockLabel","_tag","_comment","blockNormal","gfmTable","blockGfm","blockPedantic","inlineCode","_punctuation","blockSkip","_inlineComment","_inlineLabel","reflinkSearch","inlineNormal","inlinePedantic","inlineGfm","inlineBreaks","normal","_Lexer","inlineQueue","create","static","lex","next","lastToken","cutSrc","lastParagraphClipped","leading","tabs","extTokenizer","call","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","errMsg","charCodeAt","error","Error","keepPrevChar","keys","includes","lastIndexOf","startInline","_Renderer","infostring","quote","body","startatt","listitem","checkbox","tablerow","tablecell","flags","strong","em","cleanHref","out","image","_TextRenderer","_Parser","textRenderer","parser","parse","parseInline","renderers","genericToken","ret","headingToken","codeToken","tableToken","j","k","blockquoteToken","listToken","itemBody","unshift","htmlToken","paragraphToken","textToken","escapeToken","tagToken","linkToken","imageToken","strongToken","emToken","codespanToken","delToken","_Hooks","Set","preprocess","markdown","postprocess","Marked","defaults","setOptions","lexInline","Parser","Renderer","TextRenderer","Lexer","Tokenizer","Hooks","args","use","values","concat","childTokens","pack","opts","ext","prevRenderer","apply","extLevel","prop","rendererProp","rendererFunc","tokenizerProp","tokenizerFunc","prevTokenizer","hooksProp","hooksFunc","prevHook","passThroughHooks","has","arg","Promise","resolve","then","packWalktokens","origOpt","warn","throwError","prototype","toString","all","catch","message","msg","reject","markedInstance","marked","getDefaults","Array","required","activeListItem","ulr","currentCategory","breadcrumbs","created","itemId","$route","query","path","$router","id","parseMarkDown","component","components","CanvasOne","canvasType","dataSet","loadJsData","$store","locale","Measurable","aspectRatio","computedAspectRatio","aspectStyle","paddingBottom","undefined","__cachedSizer","getSlot","measurableStyles","$listeners"],"sourceRoot":""}